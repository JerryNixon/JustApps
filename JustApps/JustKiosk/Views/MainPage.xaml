<Page x:Class="JustKiosk.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Controls="using:JustKiosk.Controls"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:UI="using:Microsoft.Advertising.WinRT.UI"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:JustKiosk.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:t="using:JustKiosk.Triggers" xmlns:vm="using:JustKiosk.ViewModels"
      x:Name="ThisPage" mc:Ignorable="d">

    <Page.DataContext>
        <vm:MainPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.TopAppBar>
        <AppBar x:Name="MyTopAppBar" Background="SteelBlue" ClosedDisplayMode="Hidden"
                IsOpen="True" IsSticky="True" RequestedTheme="Dark">

            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{x:Bind MyTopAppBar.IsOpen, Mode=OneWay}" Value="False">
                    <Core:ChangePropertyAction PropertyName="IsAdmin" TargetObject="{x:Bind ViewModel}" Value="False" />
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>

            <RelativePanel Margin="4">

                <RelativePanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="4" />
                        <Setter Property="Height" Value="64" />
                        <Setter Property="Width" Value="64" />
                    </Style>
                </RelativePanel.Resources>

                <TextBox x:Name="UrlTextBox" Margin="24,0" HorizontalAlignment="Stretch"
                         Header="Home Url" RelativePanel.AlignLeftWithPanel="True"
                         RelativePanel.AlignTopWith="NavigateButton" RelativePanel.Below="SetPinButton"
                         RelativePanel.LeftOf="NavigateButton"
                         Text="{Binding HomeUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                </TextBox>

                <Button x:Name="NavigateButton" Click="Navigate_Click"
                        RelativePanel.AlignRightWithPanel="True" RelativePanel.Below="CloseAdminButton">
                    <SymbolIcon Symbol="Forward" />
                </Button>

                <Button x:Name="SetPinButton" RelativePanel.LeftOf="ShowHelpButton">
                    <TextBlock>
                        <Run Text="Set" />
                        <LineBreak />
                        <Run Text="Pin" />
                    </TextBlock>
                    <Button.Flyout>
                        <Flyout Placement="Bottom">
                            <StackPanel>
                                <TextBox Margin="4,0,4,0" Background="LightSteelBlue" Header="Please enter pin"
                                         IsHitTestVisible="False" Text="{Binding AdminPin}" />
                                <Controls:NumberPad OnSubmit="{x:Bind ViewModel.SetPin}" Pin="{Binding AdminPin, Mode=TwoWay}" />
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>

                <Button x:Name="EditPathButton" Click="EditPath_Click"
                        RelativePanel.LeftOf="ContactButton">
                    <SymbolIcon Symbol="ClearSelection" />
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="Click">
                            <Core:ChangePropertyAction PropertyName="IsOpen" TargetObject="{x:Bind MyTopAppBar}" Value="False" />
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </Button>

                <Button x:Name="ShowHelpButton" Click="ShowHelp_Click"
                        RelativePanel.LeftOf="EditPathButton">
                    <SymbolIcon Symbol="Help" />
                </Button>

                <Button x:Name="ContactButton" RelativePanel.LeftOf="CloseAdminButton">
                    <SymbolIcon Symbol="Mail" />
                    <Button.Flyout>
                        <Flyout Placement="Bottom">
                            <Button Click="Contact_Click" Content="Send feedback" />
                        </Flyout>
                    </Button.Flyout>
                </Button>

                <Button x:Name="CloseAdminButton" RelativePanel.AlignRightWithPanel="True"
                        RelativePanel.AlignTopWithPanel="True">
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="Click">
                            <Core:ChangePropertyAction PropertyName="IsAdmin" TargetObject="{x:Bind ViewModel}" Value="False" />
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                    <SymbolIcon Symbol="Clear" />
                </Button>

            </RelativePanel>
        </AppBar>
    </Page.TopAppBar>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="BoundaryState">
                    <VisualState.Setters>
                        <Setter Target="BoundaryPath.Fill" Value="Green" />
                        <Setter Target="BoundaryEditCloseButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="IntroState">
                    <VisualState.Setters>
                        <Setter Target="MyTopAppBar.IsOpen" Value="False" />
                        <Setter Target="OverlayContainer.Visibility" Value="Visible" />
                        <Setter Target="OverlayImage.Source" Value="ms-appx:///Assets/Help/Intro.png" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="HelpState">
                    <VisualState.Setters>
                        <Setter Target="OverlayContainer.Visibility" Value="Visible" />
                        <Setter Target="OverlayImage.Source" Value="ms-appx:///Assets/Help/Help.png" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NormalState">
                    <VisualState.StateTriggers>
                        <t:BooleanTrigger When="False" Value="{x:Bind ViewModel.IsAdmin, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LoginButton.Visibility" Value="Visible" />
                        <Setter Target="MyTopAppBar.Visibility" Value="Collapsed" />
                        <Setter Target="MyTopAppBar.IsOpen" Value="False" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="AdminState">
                    <VisualState.StateTriggers>
                        <t:BooleanTrigger When="True" Value="{x:Bind ViewModel.IsAdmin, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LoginButton.Visibility" Value="Collapsed" />
                        <Setter Target="HomeButton.Visibility" Value="Collapsed" />
                        <Setter Target="MyTopAppBar.Visibility" Value="Visible" />
                        <Setter Target="MyTopAppBar.IsOpen" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <WebView x:Name="MyWebView" RelativePanel.AlignBottomWithPanel="True"
                 RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
                 RelativePanel.AlignTopWithPanel="True" RenderTransformOrigin="0.5,0.5">
        </WebView>

        <Button x:Name="HomeButton" Width="64" Height="64"
                Margin="24" Click="Home_Click" RelativePanel.AlignBottomWithPanel="True"
                RelativePanel.AlignLeftWithPanel="True">
            <SymbolIcon Symbol="Home" />
        </Button>

        <Button x:Name="LoginButton" Width="64" Height="64"
                Margin="24" Content="..." Padding="16,4">
            <RelativePanel.AlignBottomWithPanel>True</RelativePanel.AlignBottomWithPanel>
            <RelativePanel.AlignRightWithPanel>True</RelativePanel.AlignRightWithPanel>
            <Button.Flyout>
                <Flyout x:Name="AdminFlyout" Placement="Top">
                    <StackPanel>
                        <PasswordBox Margin="4,0,4,0" Background="LightSteelBlue" Header="Please enter pin"
                                     IsHitTestVisible="False" Password="{Binding AdminPin}" />
                        <Controls:NumberPad OnSubmit="{x:Bind ViewModel.Authenticate}" Pin="{Binding AdminPin, Mode=TwoWay}" />
                    </StackPanel>
                </Flyout>
            </Button.Flyout>
        </Button>

        <Grid x:Name="OverlayContainer" RelativePanel.AlignBottomWithPanel="True"
              RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
              RelativePanel.AlignTopWithPanel="True" Visibility="Collapsed">
            <Grid.Background>
                <SolidColorBrush Opacity=".5" Color="Black" />
            </Grid.Background>
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="PointerPressed">
                    <Core:ChangePropertyAction PropertyName="Visibility" TargetObject="{Binding ElementName=OverlayContainer}"
                                               Value="Collapsed" />
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
            <Viewbox IsHitTestVisible="False">
                <Image x:Name="OverlayImage" Margin="140" Stretch="Uniform" />
            </Viewbox>
        </Grid>

        <Path Canvas.Left="31.3825" Canvas.Top="52.0001" Stretch="Fill" StrokeLineJoin="Round" Stroke="Red" Fill="Green" 
                      Data="F1 M31.8825,52.5002 L514.486,137.588 L436.786,283.534 L100,359.5 L31.8825,52.5002 z M74,84.5001 L164.838,293.796 L417.887,268.711 L491.386,148.99 L74,84.5001 z" Margin="26.167,90.333,0,88" UseLayoutRounding="False"/>


        <Button x:Name="BoundaryEditCloseButton" Content="Close" Padding="12"
                RelativePanel.AlignHorizontalCenterWithPanel="True"
                RelativePanel.AlignVerticalCenterWithPanel="True" Visibility="Collapsed">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="Click">
                    <Core:ChangePropertyAction PropertyName="IsOpen" TargetObject="{x:Bind MyTopAppBar}" Value="True" />
                    <Core:ChangePropertyAction PropertyName="IsAdmin" TargetObject="{x:Bind ViewModel}" Value="True" />
                    <Core:GoToStateAction StateName="AdminState" />
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>

    </RelativePanel>

</Page>

