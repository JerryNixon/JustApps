<Page x:Class="JustKiosk.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:JustKiosk.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:JustKiosk.ViewModels" mc:Ignorable="d">

    <Page.DataContext>
        <vm:MainPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.TopAppBar>
        <AppBar x:Name="MyTopAppBar" Background="SteelBlue" ClosedDisplayMode="Hidden"
                IsOpen="True" IsSticky="True" RequestedTheme="Dark">
            <TextBlock>Hello Admin</TextBlock>
        </AppBar>
    </Page.TopAppBar>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <Interactivity:Interaction.Behaviors>
            <Core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsAdmin, Mode=OneWay}" Value="False">
                <Core:GoToStateAction StateName="NormalState" />
            </Core:DataTriggerBehavior>
            <Core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsAdmin, Mode=OneWay}" Value="True">
                <Core:GoToStateAction StateName="AdminState" />
            </Core:DataTriggerBehavior>
            <Core:EventTriggerBehavior>
                <Core:GoToStateAction StateName="NormalState" />
            </Core:EventTriggerBehavior>
        </Interactivity:Interaction.Behaviors>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="NormalState">
                    <VisualState.Setters>
                        <Setter Target="LoginButton.Visibility" Value="Visible" />
                        <Setter Target="LogoutButton.Visibility" Value="Collapsed" />
                        <Setter Target="MyTopAppBar.Visibility" Value="Collapsed" />
                        <Setter Target="MyTopAppBar.IsOpen" Value="False" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="AdminState">
                    <VisualState.Setters>
                        <Setter Target="LoginButton.Visibility" Value="Collapsed" />
                        <Setter Target="LogoutButton.Visibility" Value="Visible" />
                        <Setter Target="MyTopAppBar.Visibility" Value="Visible" />
                        <Setter Target="MyTopAppBar.IsOpen" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Button x:Name="LogoutButton" Margin="16" Content="Logout"
                Padding="16,4">
            <RelativePanel.AlignBottomWithPanel>True</RelativePanel.AlignBottomWithPanel>
            <RelativePanel.AlignRightWithPanel>True</RelativePanel.AlignRightWithPanel>
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="Click">
                    <Core:ChangePropertyAction PropertyName="IsAdmin" TargetObject="{x:Bind ViewModel}" Value="False" />
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>
        <Button x:Name="LoginButton" Margin="16" Content="..."
                Padding="16,4">
            <RelativePanel.AlignBottomWithPanel>True</RelativePanel.AlignBottomWithPanel>
            <RelativePanel.AlignRightWithPanel>True</RelativePanel.AlignRightWithPanel>
            <Button.Flyout>
                <Flyout x:Name="AdminFlyout" Placement="Top">
                    <RelativePanel>
                        <RelativePanel.Resources>
                            <Style x:Key="pinButtonStyle" TargetType="Button">
                                <Setter Property="Height" Value="56" />
                                <Setter Property="Width" Value="56" />
                                <Setter Property="Margin" Value="4" />
                                <Setter Property="FontSize" Value="32" />
                            </Style>
                        </RelativePanel.Resources>
                        <PasswordBox x:Name="pinTextBox" Margin="4,0,4,0" Background="LightSteelBlue"
                                     Header="Please enter pin" IsHitTestVisible="False"
                                     Password="{Binding AdminPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignTopWithPanel="True"
                                     RelativePanel.LeftOf="pinButtonGo" />
                        <Button x:Name="pinButton1" Click="{x:Bind ViewModel.Add1}" Content="1"
                                RelativePanel.AlignLeftWithPanel="True" RelativePanel.Below="pinTextBox"
                                Style="{StaticResource pinButtonStyle}" />
                        <Button x:Name="pinButton2" Click="{x:Bind ViewModel.Add2}" Content="2"
                                RelativePanel.Below="pinTextBox" RelativePanel.RightOf="pinButton1"
                                Style="{StaticResource pinButtonStyle}" />
                        <Button x:Name="pinButton3" Click="{x:Bind ViewModel.Add3}" Content="3"
                                RelativePanel.Below="pinTextBox" RelativePanel.RightOf="pinButton2"
                                Style="{StaticResource pinButtonStyle}" />
                        <Button x:Name="pinButton4" Click="{x:Bind ViewModel.Add4}" Content="4"
                                RelativePanel.AlignLeftWithPanel="True" RelativePanel.Below="pinButton1"
                                Style="{StaticResource pinButtonStyle}" />
                        <Button x:Name="pinButton5" Click="{x:Bind ViewModel.Add5}" Content="5"
                                RelativePanel.Below="pinButton1" RelativePanel.RightOf="pinButton4"
                                Style="{StaticResource pinButtonStyle}" />
                        <Button x:Name="pinButton6" Click="{x:Bind ViewModel.Add6}" Content="6"
                                RelativePanel.Below="pinButton1" RelativePanel.RightOf="pinButton5"
                                Style="{StaticResource pinButtonStyle}" />
                        <Button x:Name="pinButton7" Click="{x:Bind ViewModel.Add7}" Content="7"
                                RelativePanel.AlignLeftWithPanel="True" RelativePanel.Below="pinButton4"
                                Style="{StaticResource pinButtonStyle}" />
                        <Button x:Name="pinButton8" Click="{x:Bind ViewModel.Add8}" Content="8"
                                RelativePanel.Below="pinButton4" RelativePanel.RightOf="pinButton4"
                                Style="{StaticResource pinButtonStyle}" />
                        <Button x:Name="pinButton9" Click="{x:Bind ViewModel.Add9}" Content="9"
                                RelativePanel.Below="pinButton4" RelativePanel.RightOf="pinButton5"
                                Style="{StaticResource pinButtonStyle}" />
                        <Button x:Name="pinButton0" Click="{x:Bind ViewModel.Add0}" Content="0"
                                RelativePanel.AlignLeftWith="pinButton8" RelativePanel.Below="pinButton8"
                                Style="{StaticResource pinButtonStyle}" />
                        <Button x:Name="pinButtonBack" Background="LightCoral"
                                Click="{x:Bind ViewModel.AddUndo}" RelativePanel.AlignLeftWith="pinButton7"
                                RelativePanel.Below="pinButton7" Style="{StaticResource pinButtonStyle}">
                            <SymbolIcon Symbol="Clear" />
                        </Button>
                        <Button x:Name="pinButtonGo" Background="LightGreen"
                                Click="{x:Bind ViewModel.Authenticate}" RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.AlignTopWithPanel="True" Style="{StaticResource pinButtonStyle}">
                            <SymbolIcon Symbol="Forward" />
                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="Click">
                                    <Behaviors:CloseFlyoutAction />
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                        </Button>
                    </RelativePanel>
                </Flyout>
            </Button.Flyout>
        </Button>

    </RelativePanel>

</Page>

